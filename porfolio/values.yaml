image:
  registry: docker.io
  repository: hmei28/portfolio
  tag: latest
  imagePullPolicy: "Always"

  # Enable debug mode for django 
  debug: false

replicaCount: 1

## Configuration of admin user
portfolioSuperUserName: admin
portfolioSuperUserMail: admin@example.com
portfolioSuperUserPassword: ""

# Port used by guinicorn  portfolio app
containerPorts: 8000

hostname: portfolio.example.com


## @param existingSecret Name of existing secret containing porfilio credentials
## NOTE: Must contain key `password`
## NOTE: Not work now 
##
## existingSecret:

## configuration to send email 
## @param host is host stmp eg : smtp.example.com'
## @param tlsOption need to be True/false 
## @param emailRecipient recieve the mail send by portfolio website
##
configMail:
  enabled: false
  host: ""
  hostUser: ""
  hostPassword: "" 
  tlsOption: "" 
  port: ""
  emailRecipient: ""

postgresql:
  enabled: true
  auth:
    postgresPassword: ""
    database: "portfolio"
    username: "svc-portfolio"
    password: ""

## @param existingSecret Name of existing secret containing portfolio credentials and mailconfig password
## NOTE: Must contain key `portfolioSuperUserPassword`
## NOTE: Must contain key `emailPassword`
## NOTE: When it's set, the `portfolioSuperUserPassword` ans `emailPassword` parameter is ignored
##
existingSecret: ""

persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.storageClass Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: ""
  
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce

  size: 5Gi
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""

  ## @param persistence.annotations Persistent Volume Claim annotations
  ## Not WORK NOW
  annotations: {}




service:
  ## @param service.type Portfolio service type
  ##
  type: ClusterIP
  ## @param service.ports.http Portfolio service HTTP port
  ##
  targetPort: 80

  ## Node ports to expose
  ## NOTE: choose port between <30000-32767>
  ##
  nodePort: ""
  ## @param service.clusterIP Portfolio service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP Portfolio service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges Portfolio service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy Portfolio service external traffic policy
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for Portfolio service
  ##
  annotations: {}
  ## @param service.extraPorts Extra port to expose on Portfolio service
  ##
  extraPorts: []


ingress:
  ## @param ingress.enabled Enable ingress record generation for portfolio
  ##
  enabled: true
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: "nginx"
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: portfolio.ettassi.fr
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path  : /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ##
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  ## @param ingress.tls TLS configuration to add custom hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## - secretName: portfolio.local
  ##   hosts:
  ##     - portfolio.local
  ##
  tls: []
   ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: portfolio.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []


